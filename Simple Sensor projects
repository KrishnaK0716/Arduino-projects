INTERFACING TEMPERATURE AND HUMIDITY SENSOR

// DHT11 sensor

#include <DHT.h>
#define DHTPIN 7 // what digital
  pin we're connected to
#define DHTTYPE DHT11  //DHT 11

// LCD display

#include
  <LiquidCrystal.h>;
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

DHT dht (DHTPIN,
  DHTTYPE); //Initialize DHT sensor.


void setup() {
  // put your setup
  code here, to run once:


// Serial.begin(9600);
dht.begin();

}

void
  loop() {
 delay(10000); // Waiting time between measurements
 
float t
  = dht.readTemperature(); // Read temperature in *C (default)
float h = dht.readHumidity();
  // Read humidity %

float hic = dht.computeHeatIndex(t, h);


/*Serial.print("Temerature:
  ");
Serial.print(t);
Serial.print("*C\	");
Serial.print("Humidity:
  ");
Serial.print(h);
Serial.print("%\	");
Serial.print("Heat index:
  ");
Serial.println(hic);
*/



// LCD display

lcd.begin(16,
  2); // display diamensions
lcd.setCursor(0,0);
lcd.print("T=");
lcd.setCursor(2,0);
lcd.print(t);
lcd.setCursor(4,0);
lcd.print("*C
  ");
lcd.setCursor(0,1);
lcd.print("H=");
lcd.setCursor(2,1);
lcd.print(h);
lcd.setCursor(4,1);
lcd.print("%
  ");
lcd.setCursor(8,1);
lcd.print("HI=");
lcd.print(hic);

}



FLAME SENSOR

// lowest and highest sensor readings:
const int sensorMin = 0;     //  sensor minimum
const int sensorMax = 1024;  // sensor maximum

void setup()  {
  // initialize serial communication @ 9600 baud:
  Serial.begin(9600);  
}
void loop() {
  // read the sensor on analog A0:
	int sensorReading  = analogRead(A0);
  // map the sensor range (four options):
  // ex: 'long  int map(long int, long int, long int, long int, long int)'
	int range = map(sensorReading,  sensorMin, sensorMax, 0, 3);
  
  // range value:
  switch (range) {
  case 0:    // A fire closer than 1.5 feet away.
    Serial.println("** Close  Fire **");
    break;
  case 1:    // A fire between 1-3 feet away.
    Serial.println("**  Distant Fire **");
    break;
  case 2:    // No fire detected.
    Serial.println("No  Fire");
    break;
  }
  delay(1);  // delay between reads
}
